# --- Base image with Node v20 ---
FROM node:20-alpine AS base
WORKDIR /app
# Ensure production environment
ENV NODE_ENV=production

# --- Builder: Install Turbo globally and prune the monorepo ---
FROM base AS builder
RUN apk update && apk add --no-cache libc6-compat
# Copy the entire repo into the image
COPY . .
# Install Turbo globally. Replace "^2" with the major version you require if needed.
RUN yarn global add turbo@^2
# Prune the monorepo for the backend workspace.
# (Change "apps/backend" to your workspace name if different.)
RUN turbo prune apps/backend --docker

# --- Installer: Install dependencies and build the backend ---
FROM base AS installer
RUN apk update && apk add --no-cache libc6-compat
WORKDIR /app
# Copy the pruned dependency tree and package files generated by Turbo.
COPY --from=builder /app/out/json/ .
# Install dependencies without updating the lockfile.
RUN yarn install --frozen-lockfile
# Copy the rest of the pruned source files
COPY --from=builder /app/out/full/ .
# Build the backend. Here we filter to the apps/backend workspace.
RUN yarn turbo run build --filter=apps/backend...

# --- Runner: Prepare a lightweight final image and start the service ---
FROM node:20-alpine AS runner
WORKDIR /app
# Create a non-root user for running production code.
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 medusa
USER medusa
# Copy the fully built project from the installer stage.
COPY --from=installer --chown=medusa:nodejs /app .
# Switch directory into the backend folder
WORKDIR /app/apps/backend
# Start the Medusa backend via the yarn start script, which uses "medusa start --types=false"
RUN yarn build
RUN yarn db:migrate
CMD ["yarn", "start"]
